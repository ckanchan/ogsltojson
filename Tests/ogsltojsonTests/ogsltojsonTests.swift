import XCTest
import class Foundation.Bundle


final class ogsltojsonTests: XCTestCase {
    func testDecodingCuneiformSignA() throws {
        // Some of the APIs that we use below are available in macOS 10.13 and above.
        guard #available(macOS 10.13, *) else {
            return
        }
        
        let binary = productsDirectory.appendingPathComponent("ogsltojson")
        let process = Process()
        process.executableURL = binary
        process.arguments = [OGSLTestData.cuneiformSignA]
        
        let pipe = Pipe()
        process.standardOutput = pipe
        
        try process.run()
        process.waitUntilExit()
        
        let data = pipe.fileHandleForReading.readDataToEndOfFile()
        if let output = String(data: data, encoding: .utf8)  {            
            XCTAssertEqual(output, OGSLTestData.jsonSignA)
        } else {
            XCTFail()
        }
    }

    /// Returns path to the built products directory.
    var productsDirectory: URL {
      #if os(macOS)
        for bundle in Bundle.allBundles where bundle.bundlePath.hasSuffix(".xctest") {
            return bundle.bundleURL.deletingLastPathComponent()
        }
        fatalError("couldn't find the products directory")
      #else
        return Bundle.main.bundleURL
      #endif
    }
    
    static var allTests = [
        ("testDecodingCuneiformSignA", testDecodingCuneiformSignA),
    ]
}

enum OGSLTestData {}
extension OGSLTestData {
    static let cuneiformSignA = """
    @sign    A
    @list    LAK797
    @list    MZL839
    @uphase    1
    @uname    CUNEIFORM SIGN A
    @ucode    x12000    íÄÄ
    @v     æu‚ÇÑ
    @v    a
    @v    aia‚ÇÇ
    @v    aya‚ÇÇ
    @v    bar‚Çì
    @v    buni≈ã‚Çì
    @v    bur‚Çì
    @v    dur‚ÇÖ
    @v    duru‚ÇÖ
    @v    e‚ÇÑ
    @v    ea
    @v    ebir‚ÇÉ
    @v    em‚Çì
    @v    epir‚ÇÉ
    @v    e≈°‚ÇÅ‚ÇÄ
    @v    ≈ãa‚ÇÅ‚ÇÄ
    @v    ia‚ÇÅ‚ÇÄ
    @v?    id‚ÇÖ
    @v    me‚ÇÖ
    @v    mu‚ÇÅ‚ÇÑ
    @v    sed‚Çì
    @v    ≈°eg‚Çì
    @v    ·π≠ur‚ÇÖ
    @v    ya‚ÇÅ‚ÇÄ
    @end sign
    """
    
    static let jsonSignA = """
[
  {
    "unicodeName" : "CUNEIFORM SIGN A",
    "sign" : "A",
    "values" : [
      "a",
      "aia‚ÇÇ",
      "aya‚ÇÇ",
      "bar‚Çì",
      "buni≈ã‚Çì",
      "bur‚Çì",
      "duru‚ÇÖ",
      "dur‚ÇÖ",
      "ea",
      "ebir‚ÇÉ",
      "em‚Çì",
      "epir‚ÇÉ",
      "esÃå‚ÇÅ‚ÇÄ",
      "e‚ÇÑ",
      "ia‚ÇÅ‚ÇÄ",
      "me‚ÇÖ",
      "mu‚ÇÅ‚ÇÑ",
      "sed‚Çì",
      "ya‚ÇÅ‚ÇÄ",
      "≈ãa‚ÇÅ‚ÇÄ",
      "sÃåeg‚Çì",
      " æu‚ÇÑ",
      "tÃ£ur‚ÇÖ"
    ],
    "characterCode" : "x12000",
    "utf8" : "íÄÄ"
  }
]

"""
}
